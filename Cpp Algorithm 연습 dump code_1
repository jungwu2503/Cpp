#include <iostream>
using namespace std;
#include <string>
//#include <bits/stdc++.h>

int func(int arr[], int index) {
	int occur[101];
	fill(occur, occur+101, 0);

	for (int i = 0; i < index; i++) {
		if (occur[100-arr[i]] == 1) return 1;
		occur[arr[i]] = 1;
	}
	return 0;
}

void main()
{
	int arr[8] = {2, 8, 22, 30, 34, 60, 70, 80};

	cout << func(arr, 8);
}

/*
int main(void)
{
	string s;
	cin >> s;
	for (char a = 'a'; a <= 'z'; a++) {
		int cnt = 0;
		for (auto c : s) 
			if (c == a) cnt++;
		cout << cnt << " ";
	}
}*/

/*
void insert(int idx, int num, int arr[], int& len) {
	for (int i = len; i > idx; i--) arr[i] = arr[i-1];
	arr[idx] = num;
	len++;
}

void erase(int idx, int arr[], int& len) {
	len--;
	for (int i = idx; i < len; i++) 
		arr[i] = arr[i+1];
}

void printArr(int arr[], int& len) {
	for (int i = 0; i < len; i++) cout << arr[i] << " ";
	cout << endl;
}

void insert_test() {

}

void erase_test() {

}

int main(void) 
{
	vector<int> v1(3, 5);
	v1.push_back(7);

	vector<int> v2(2);
	v2.insert(v2.begin()+1, 3);

	vector<int> v3 = { 1, 2, 3, 4 };
	v3.erase(v3.begin()+2);

	vector<int> v4;
	v4 = v3;
	v4.pop_back();
	cout << v3[0] << v3[1] << v3[2] << v3[4];

	
	int len;
	cin >> len;
	int* arr = new int[len];

	for (int i = 0; i < len; i++) cin >> arr[i];

	printArr(arr, len);
	insert_test();
	erase_test();

	delete[] arr;
}*/

/*void main() 
{
	//ios::sync_with_stdio(false);
	//cin.tie(nullptr);

	int n, x;

	cin >> n >> x;

	int *arr = new int[n];

	for (int i = 0; i < n; i++) cin >> arr[i];

	for (int i = 0; i < n; i++) {
		if (arr[i] < x) cout << arr[i] << " ";
	}

	delete[] arr;
}*/

/*int func4(int x) 
{
	int val = 1;
	while (val <= x/2) {
		val = val * 2;
	}
	return val;
}

void main() 
{
	int x;
	cin >> x;
	cout << func4(x);
}*/

/* 
int func(int x) 
{
	if (sqrt(x) * sqrt(x) == x) return 1;
	return 0;
}

void main()
{
	int x;
	cin >> x;
	cout << func(x);
}*/
